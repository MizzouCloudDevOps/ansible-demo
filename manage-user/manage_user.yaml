# The following create and allow an ansibledevops user on remote hosts
---
- name: create a user on all hosts
  hosts: nodes
  remote_user: ec2-user
  become: yes 
  gather_facts: no

  vars:
    - ansible_ssh_public_key_file: "Your_Public_Key"
    - user: ansibledevops
  tasks:
    - name: Create a login user
      user:
        name: "{{ user }}"
        shell: /bin/bash
        createhome: yes
        home: /home/ansibledevops
        state: present
   
    - file:
        path: /home/ansibledevops/.ssh
        state: directory
        owner: ansibledevops
        group: ansibledevops
        mode: '0700'

    - name: Upload the public SSH key to remote servers
      copy:
        src: /home/ec2-user/.ssh/{{ ansible_ssh_public_key_file }}
        dest: /home/ansibledevops/.ssh/{{ ansible_ssh_public_key_file }}
        owner: ansibledevops
        group: ansibledevops
        mode: '0766'

    - name: add the public key into Authorized_keys file to enable Key Auth
      shell: "cat /home/ansibledevops/.ssh/'{{ ansible_ssh_public_key_file }}' >> /home/ansibledevops/.ssh/authorized_keys &&
       chmod 600 /home/ansibledevops/.ssh/authorized_keys && 
       chown ansibledevops:ansibledevops /home/ansibledevops/.ssh/authorized_keys"

    - name: Deny root from logging in 
      ansible.builtin.lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^(#)?PermitRootLogin \w*$'
        line: 'PermitRootLogin no'
        state: present
      notify:
       - restart ssh

    - name: add {{user }} to sudoers file 
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        regexp: '^{{ user }}'
        line: '{{ user }} ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s' 
      notify:
       - restart ssh
            
  handlers:
    - name: restart ssh
      ansible.builtin.service:
        name: sshd
        state: restarted
